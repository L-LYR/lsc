i32 W = 10;
i32 H = 25;
i32 i, j, k;
i32 c;
i32 d = 9;
i32 X = 0;
i32 Y = 0;
i32 T = 0;
i32 LastT = 0;
i32 arr[25][10];
bool bottom = false;

i32 block[20] = {
    0xc840, 0x3210, 0x5410, 0x5410, 0x6510, 0x8541, 0x5421,
    0x9540, 0x6541, 0x9651, 0x9654, 0x9541, 0x6542, 0xa951,
    0x8654, 0x9510, 0x6540, 0x9521, 0xa654, 0x9851,
};

i32 next[20] = {
    1, 0, 3, 2, 5, 4, 7, 6, 9, 10, 11, 8, 13, 14, 15, 12, 17, 18, 19, 16,
};

bool check() {
    for (i = block[T]; i != 0; i = i >> 4) {
        j = X + i % 4;
        k = Y + i / 4 % 4;
        if (j < 0 || j >= W || k >= H || arr[k][j] != 0) {
            return false;
        }
    }
    return true;
}

void fill(i32 x) {
    for (i = block[T]; i != 0; i = i >> 4) {
        j = X + i % 4;
        k = Y + i / 4 % 4;
        arr[k][j] = x;
    }
    return;
}

i32 main() {
    c = 0;

    for (;true;) {
        scan("%d", c);
        if (c == 27) {
            break;
        }
        fill(0);
        if (c == 0x41) { // A
            X = X - 1;
            if (!check()) {
                X = X + 1;
            }
        } else if (c == 0x44) { // D
            X = X + 1;
            if (!check()) {
                X = X - 1;
            }
        } else if (c == 0x53) { // S
            Y = Y + 1;
            if (!check()) {
                Y = Y - 1;
                bottom = true;
            }
        } else if (c == 0x57) { // W
            LastT = T;
            T = next[T];
            if (!check()) {
                T = LastT;
            }
        }
        if (--d == 0) {
            d = 9;
            Y = Y + 1;
            if (!check()) {
                Y = Y - 1;
                bottom = true;
            }
        }
        fill(1);
        if (bottom) {
            T = T + 1;
            X = Y = 0;
        }
        for (i = 0; i < H; ++i) {
            for (j = 0; j < W; ++j) {
                if (arr[i][j] == 1) {
                    print("%s", "[]");
                }
            }
            print("\r\n", "");
        }
    }

    return 0;
}