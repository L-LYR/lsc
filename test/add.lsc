i32 add(i32 i, i32 j) {
    f32 f = -1.2;
    f32 ff = -f;
    return i + j;
}
i32[2][4] matMul(i32 a[2][3], i32 b[3][4]) {
    i32 i, j, k;
    i32 ans[2][4];
    for (i = 0; i < 2; ++i) {
        for (j = 0; j < 4; ++j) {
            for (k = 0; k < 3; ++k) {
                ans[i][j] = ans[i][j] + a[i][k] * b[k][j];
            }
        }
    }
    return ans;
}
void matPrint(i32 a[2][4]) {
    i32 i, j;
    for (i = 0; i < 2; ++i) {
        for (j = 0; j < 4; ++j) {
            print("%d", a[i][j]);
            print("%s", " ");
        }
        print("%s", "\n");
    }
    return;
}
i32 fibonacci(i32 n) {
    if (n <= 0) {
        return 0;
    } else if (n == 1) {
        return 1;    
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}
i32 main() {
    i32 mat[2][3] = {
        {1,2,3},
        {1,2,3},
    };
    i32 mat2[3][4] = {
        {1,2,3,4},
        {1,2,3,4},
        {1,2,3,4},
    };
    i32 x;
    print("%d", fibonacci(10));
    print("%s", "\n");
    matPrint(matMul(mat, mat2));
    print("%d", add(1, 2));

    //scan("%d", x);
    //print("%d", x);
    return 0;   
}