
i32 i = 1000, j = i;


i32 arr[2][3][4] = {
    {
        {1,2,3,4},
        {5,6,7,8},
        {9,10,11,12},
    },
    {
        {13,14,15,16},
        {17,18,19,20},
        {21,22,23,24},
    }
};


i32 arr2[2] = {1, 2};
f32 f = 3.4e+5;
string str = "hello world";

i32 sum(i32 i, i32 j) {
    f32 ff = f;
    f32 f = 3.0;
    scan(arr[1][2][3], arr[0][1][2]);
    return i + j;
}

i32 main() {
    string main_str = "main";
    bool b = false;

    i32 j = 0;
    i32 i = -1;
    j = ++i;
    {
        i32 i = 0;
        {
            i32 i = 1;
        }
        {
            f32 f = 0.1;
            print(f + 0.2, f + f);
        }
    }
    scan(i, j);
    {
        f32 f = 0.2;
    }

    return sum(i, j);
}
f32 ff = f;
bool b;
bool barr[5];
string strs[12];

void func() {
    i32 i = 1 + 2 * 3 / 4 * (200 + 4);
    return;
}

i32[3][3] matMul(i32 a[3][3], i32 b[3][3]) {
    i32 i, j, k;
    i32 ans[3][3];
    for (i = 0; i < 3; ++i) {
        continue;
        for (j = 0; j < 3; ++j) {
            continue;
            for (k = 0; k < 3; ++k) {
                break;
                ans[i][j] = ans[i][j] + a[i][k] * b[k][j];
                continue;
            }
            break;
        }
        break;
    }
    return ans;
}

i32 fibonaci(i32 n) {
    if (n <= 0) {
        return 0;
    } else if (n == 1) {
        return 1;    
    }
    return fibonaci(n - 1) + fibonaci(n - 2);
}

i32 shortPath() {
    i32 i = 0;
    i32 j = 1;

    if (i == 0 || j == 1) {
        return 0;
    }

    if (i != 4 * j && j == 2 * i) {
        return 1;
    }
    return 9;
}
