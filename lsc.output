Grammar

    0 $accept: program $end

    1 program: global_list

    2 global_list: global_declaration_or_definition
    3            | global_list global_declaration_or_definition

    4 global_declaration_or_definition: declaration
    5                                 | function_definition

    6 declaration: type_specifiers init_declarator_list ";"
    7            | type_specifiers identifier "(" parameter_type_list ")" ";"

    8 identifier: "Identifier"

    9 type_specifiers: "void"
   10                | "i32"
   11                | "f32"
   12                | "string"
   13                | "bool"
   14                | type_specifiers "[" array_length "]"

   15 init_declarator_list: init_declarator
   16                     | init_declarator_list "," init_declarator

   17 init_declarator: declarator
   18                | declarator "=" initializer

   19 declarator: identifier
   20           | declarator "[" array_length "]"

   21 array_length: "Integer Constant"

   22 initializer: assignment_expression
   23            | "{" initializer_list "}"
   24            | "{" initializer_list "," "}"

   25 initializer_list: initializer
   26                 | initializer_list "," initializer

   27 parameter_type_list: type_specifiers
   28                    | parameter_type_list "," type_specifiers

   29 function_definition: type_specifiers identifier "(" ")" compound_statement
   30                    | type_specifiers identifier "(" parameter_declarator_list ")" compound_statement

   31 parameter_declarator_list: parameter_declarator
   32                          | parameter_declarator_list "," parameter_declarator

   33 parameter_declarator: type_specifiers declarator

   34 compound_statement: "{" "}"
   35                   | "{" statement_list "}"
   36                   | "{" declaration_list "}"
   37                   | "{" declaration_list statement_list "}"

   38 statement_list: statement
   39               | statement_list statement

   40 declaration_list: declaration
   41                 | declaration_list declaration

   42 statement: compound_statement
   43          | expression_statement
   44          | jump_statement
   45          | selection_statement
   46          | loop_statement
   47          | io_statement

   48 expression_statement: ";"
   49                     | expression ";"

   50 jump_statement: "continue" ";"
   51               | "break" ";"
   52               | "return" ";"
   53               | "return" expression ";"

   54 selection_statement: "if" "(" expression ")" compound_statement
   55                    | "if" "(" expression ")" compound_statement "else" compound_statement
   56                    | "if" "(" expression ")" compound_statement "else" selection_statement

   57 loop_statement: "for" "(" expression_statement expression_statement ")" compound_statement
   58               | "for" "(" expression_statement expression_statement expression ")" compound_statement

   59 io_statement: "print" "(" argument_list ")" ";"
   60             | "scan" "(" argument_list ")" ";"

   61 expression: assignment_expression
   62           | expression "," assignment_expression

   63 assignment_expression: logical_or_expression
   64                      | postfix_expression "=" assignment_expression

   65 unary_expression: postfix_expression
   66                 | "++" unary_expression
   67                 | "--" unary_expression
   68                 | "+" unary_expression
   69                 | "-" unary_expression
   70                 | "~" unary_expression
   71                 | "!" unary_expression

   72 postfix_expression: primary_expression
   73                   | postfix_expression "[" expression "]"
   74                   | primary_expression "(" ")"
   75                   | primary_expression "(" argument_list ")"

   76 primary_expression: "Identifier"
   77                   | "Bool Constant"
   78                   | "Integer Constant"
   79                   | "Float Constant"
   80                   | "String Constant"
   81                   | "(" expression ")"

   82 argument_list: assignment_expression
   83              | argument_list "," assignment_expression

   84 logical_or_expression: logical_and_expression
   85                      | logical_or_expression "||" logical_and_expression

   86 logical_and_expression: bitwise_or_expression
   87                       | logical_and_expression "&&" bitwise_or_expression

   88 bitwise_or_expression: bitwise_xor_expression
   89                      | bitwise_or_expression "|" bitwise_xor_expression

   90 bitwise_xor_expression: bitwise_and_expression
   91                       | bitwise_xor_expression "^" bitwise_and_expression

   92 bitwise_and_expression: equality_expression
   93                       | bitwise_and_expression "&" equality_expression

   94 equality_expression: relational_expression
   95                    | equality_expression "==" relational_expression
   96                    | equality_expression "!=" relational_expression

   97 relational_expression: shift_expression
   98                      | relational_expression "<" shift_expression
   99                      | relational_expression ">" shift_expression
  100                      | relational_expression "<=" shift_expression
  101                      | relational_expression ">=" shift_expression

  102 shift_expression: additive_expression
  103                 | shift_expression "<<" additive_expression
  104                 | shift_expression ">>" additive_expression

  105 additive_expression: multiplicative_expression
  106                    | additive_expression "+" multiplicative_expression
  107                    | additive_expression "-" multiplicative_expression

  108 multiplicative_expression: unary_expression
  109                          | multiplicative_expression "*" unary_expression
  110                          | multiplicative_expression "/" unary_expression
  111                          | multiplicative_expression "%" unary_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "void" (258) 9
    "i32" (259) 10
    "f32" (260) 11
    "string" (261) 12
    "bool" (262) 13
    "if" (263) 54 55 56
    "else" (264) 55 56
    "for" (265) 57 58
    "return" (266) 52 53
    "break" (267) 51
    "continue" (268) 50
    "print" (269) 59
    "scan" (270) 60
    "Bool Constant" (271) 77
    "Identifier" (272) 8 76
    "Integer Constant" (273) 21 78
    "Float Constant" (274) 79
    "String Constant" (275) 80
    "+" (276) 68 106
    "-" (277) 69 107
    "++" (278) 66
    "--" (279) 67
    "~" (280) 70
    "!" (281) 71
    "*" (282) 109
    "/" (283) 110
    "%" (284) 111
    "<" (285) 98
    ">" (286) 99
    "<=" (287) 100
    ">=" (288) 101
    "==" (289) 95
    "!=" (290) 96
    "<<" (291) 103
    ">>" (292) 104
    "&" (293) 93
    "|" (294) 89
    "^" (295) 91
    "&&" (296) 87
    "||" (297) 85
    "=" (298) 18 64
    "," (299) 16 24 26 28 32 62 83
    "(" (300) 7 29 30 54 55 56 57 58 59 60 74 75 81
    ")" (301) 7 29 30 54 55 56 57 58 59 60 74 75 81
    "[" (302) 14 20 73
    "]" (303) 14 20 73
    "{" (304) 23 24 34 35 36 37
    "}" (305) 23 24 34 35 36 37
    ";" (306) 6 7 48 49 50 51 52 53 59 60


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program <node> (53)
        on left: 1
        on right: 0
    global_list <node> (54)
        on left: 2 3
        on right: 1 3
    global_declaration_or_definition <node> (55)
        on left: 4 5
        on right: 2 3
    declaration <node> (56)
        on left: 6 7
        on right: 4 40 41
    identifier <node> (57)
        on left: 8
        on right: 7 19 29 30
    type_specifiers <node> (58)
        on left: 9 10 11 12 13 14
        on right: 6 7 14 27 28 29 30 33
    init_declarator_list <node> (59)
        on left: 15 16
        on right: 6 16
    init_declarator <node> (60)
        on left: 17 18
        on right: 15 16
    declarator <node> (61)
        on left: 19 20
        on right: 17 18 20 33
    array_length <str> (62)
        on left: 21
        on right: 14 20
    initializer <node> (63)
        on left: 22 23 24
        on right: 18 25 26
    initializer_list <node> (64)
        on left: 25 26
        on right: 23 24 26
    parameter_type_list <node> (65)
        on left: 27 28
        on right: 7 28
    function_definition <node> (66)
        on left: 29 30
        on right: 5
    parameter_declarator_list <node> (67)
        on left: 31 32
        on right: 30 32
    parameter_declarator <node> (68)
        on left: 33
        on right: 31 32
    compound_statement <node> (69)
        on left: 34 35 36 37
        on right: 29 30 42 54 55 56 57 58
    statement_list <node> (70)
        on left: 38 39
        on right: 35 37 39
    declaration_list <node> (71)
        on left: 40 41
        on right: 36 37 41
    statement <node> (72)
        on left: 42 43 44 45 46 47
        on right: 38 39
    expression_statement <node> (73)
        on left: 48 49
        on right: 43 57 58
    jump_statement <node> (74)
        on left: 50 51 52 53
        on right: 44
    selection_statement <node> (75)
        on left: 54 55 56
        on right: 45 56
    loop_statement <node> (76)
        on left: 57 58
        on right: 46
    io_statement <node> (77)
        on left: 59 60
        on right: 47
    expression <node> (78)
        on left: 61 62
        on right: 49 53 54 55 56 58 62 73 81
    assignment_expression <node> (79)
        on left: 63 64
        on right: 22 61 62 64 82 83
    unary_expression <node> (80)
        on left: 65 66 67 68 69 70 71
        on right: 66 67 68 69 70 71 108 109 110 111
    postfix_expression <node> (81)
        on left: 72 73 74 75
        on right: 64 65 73
    primary_expression <node> (82)
        on left: 76 77 78 79 80 81
        on right: 72 74 75
    argument_list <node> (83)
        on left: 82 83
        on right: 59 60 75 83
    logical_or_expression <node> (84)
        on left: 84 85
        on right: 63 85
    logical_and_expression <node> (85)
        on left: 86 87
        on right: 84 85 87
    bitwise_or_expression <node> (86)
        on left: 88 89
        on right: 86 87 89
    bitwise_xor_expression <node> (87)
        on left: 90 91
        on right: 88 89 91
    bitwise_and_expression <node> (88)
        on left: 92 93
        on right: 90 91 93
    equality_expression <node> (89)
        on left: 94 95 96
        on right: 92 93 95 96
    relational_expression <node> (90)
        on left: 97 98 99 100 101
        on right: 94 95 96 98 99 100 101
    shift_expression <node> (91)
        on left: 102 103 104
        on right: 97 98 99 100 101 103 104
    additive_expression <node> (92)
        on left: 105 106 107
        on right: 102 103 104 106 107
    multiplicative_expression <node> (93)
        on left: 108 109 110 111
        on right: 105 106 107 109 110 111


State 0

    0 $accept: . program $end

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5

    program                           go to state 6
    global_list                       go to state 7
    global_declaration_or_definition  go to state 8
    declaration                       go to state 9
    type_specifiers                   go to state 10
    function_definition               go to state 11


State 1

    9 type_specifiers: "void" .

    $default  reduce using rule 9 (type_specifiers)


State 2

   10 type_specifiers: "i32" .

    $default  reduce using rule 10 (type_specifiers)


State 3

   11 type_specifiers: "f32" .

    $default  reduce using rule 11 (type_specifiers)


State 4

   12 type_specifiers: "string" .

    $default  reduce using rule 12 (type_specifiers)


State 5

   13 type_specifiers: "bool" .

    $default  reduce using rule 13 (type_specifiers)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 12


State 7

    1 program: global_list .
    3 global_list: global_list . global_declaration_or_definition

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_declaration_or_definition  go to state 13
    declaration                       go to state 9
    type_specifiers                   go to state 10
    function_definition               go to state 11


State 8

    2 global_list: global_declaration_or_definition .

    $default  reduce using rule 2 (global_list)


State 9

    4 global_declaration_or_definition: declaration .

    $default  reduce using rule 4 (global_declaration_or_definition)


State 10

    6 declaration: type_specifiers . init_declarator_list ";"
    7            | type_specifiers . identifier "(" parameter_type_list ")" ";"
   14 type_specifiers: type_specifiers . "[" array_length "]"
   29 function_definition: type_specifiers . identifier "(" ")" compound_statement
   30                    | type_specifiers . identifier "(" parameter_declarator_list ")" compound_statement

    "Identifier"  shift, and go to state 14
    "["           shift, and go to state 15

    identifier            go to state 16
    init_declarator_list  go to state 17
    init_declarator       go to state 18
    declarator            go to state 19


State 11

    5 global_declaration_or_definition: function_definition .

    $default  reduce using rule 5 (global_declaration_or_definition)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    3 global_list: global_list global_declaration_or_definition .

    $default  reduce using rule 3 (global_list)


State 14

    8 identifier: "Identifier" .

    $default  reduce using rule 8 (identifier)


State 15

   14 type_specifiers: type_specifiers "[" . array_length "]"

    "Integer Constant"  shift, and go to state 20

    array_length  go to state 21


State 16

    7 declaration: type_specifiers identifier . "(" parameter_type_list ")" ";"
   19 declarator: identifier .
   29 function_definition: type_specifiers identifier . "(" ")" compound_statement
   30                    | type_specifiers identifier . "(" parameter_declarator_list ")" compound_statement

    "("  shift, and go to state 22

    $default  reduce using rule 19 (declarator)


State 17

    6 declaration: type_specifiers init_declarator_list . ";"
   16 init_declarator_list: init_declarator_list . "," init_declarator

    ","  shift, and go to state 23
    ";"  shift, and go to state 24


State 18

   15 init_declarator_list: init_declarator .

    $default  reduce using rule 15 (init_declarator_list)


State 19

   17 init_declarator: declarator .
   18                | declarator . "=" initializer
   20 declarator: declarator . "[" array_length "]"

    "="  shift, and go to state 25
    "["  shift, and go to state 26

    $default  reduce using rule 17 (init_declarator)


State 20

   21 array_length: "Integer Constant" .

    $default  reduce using rule 21 (array_length)


State 21

   14 type_specifiers: type_specifiers "[" array_length . "]"

    "]"  shift, and go to state 27


State 22

    7 declaration: type_specifiers identifier "(" . parameter_type_list ")" ";"
   29 function_definition: type_specifiers identifier "(" . ")" compound_statement
   30                    | type_specifiers identifier "(" . parameter_declarator_list ")" compound_statement

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5
    ")"       shift, and go to state 28

    type_specifiers            go to state 29
    parameter_type_list        go to state 30
    parameter_declarator_list  go to state 31
    parameter_declarator       go to state 32


State 23

   16 init_declarator_list: init_declarator_list "," . init_declarator

    "Identifier"  shift, and go to state 14

    identifier       go to state 33
    init_declarator  go to state 34
    declarator       go to state 19


State 24

    6 declaration: type_specifiers init_declarator_list ";" .

    $default  reduce using rule 6 (declaration)


State 25

   18 init_declarator: declarator "=" . initializer

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 47

    initializer                go to state 48
    assignment_expression      go to state 49
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 26

   20 declarator: declarator "[" . array_length "]"

    "Integer Constant"  shift, and go to state 20

    array_length  go to state 63


State 27

   14 type_specifiers: type_specifiers "[" array_length "]" .

    $default  reduce using rule 14 (type_specifiers)


State 28

   29 function_definition: type_specifiers identifier "(" ")" . compound_statement

    "{"  shift, and go to state 64

    compound_statement  go to state 65


State 29

   14 type_specifiers: type_specifiers . "[" array_length "]"
   27 parameter_type_list: type_specifiers .
   33 parameter_declarator: type_specifiers . declarator

    "Identifier"  shift, and go to state 14
    "["           shift, and go to state 15

    $default  reduce using rule 27 (parameter_type_list)

    identifier  go to state 33
    declarator  go to state 66


State 30

    7 declaration: type_specifiers identifier "(" parameter_type_list . ")" ";"
   28 parameter_type_list: parameter_type_list . "," type_specifiers

    ","  shift, and go to state 67
    ")"  shift, and go to state 68


State 31

   30 function_definition: type_specifiers identifier "(" parameter_declarator_list . ")" compound_statement
   32 parameter_declarator_list: parameter_declarator_list . "," parameter_declarator

    ","  shift, and go to state 69
    ")"  shift, and go to state 70


State 32

   31 parameter_declarator_list: parameter_declarator .

    $default  reduce using rule 31 (parameter_declarator_list)


State 33

   19 declarator: identifier .

    $default  reduce using rule 19 (declarator)


State 34

   16 init_declarator_list: init_declarator_list "," init_declarator .

    $default  reduce using rule 16 (init_declarator_list)


State 35

   77 primary_expression: "Bool Constant" .

    $default  reduce using rule 77 (primary_expression)


State 36

   76 primary_expression: "Identifier" .

    $default  reduce using rule 76 (primary_expression)


State 37

   78 primary_expression: "Integer Constant" .

    $default  reduce using rule 78 (primary_expression)


State 38

   79 primary_expression: "Float Constant" .

    $default  reduce using rule 79 (primary_expression)


State 39

   80 primary_expression: "String Constant" .

    $default  reduce using rule 80 (primary_expression)


State 40

   68 unary_expression: "+" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 71
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 41

   69 unary_expression: "-" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 73
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 42

   66 unary_expression: "++" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 74
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 43

   67 unary_expression: "--" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 75
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 44

   70 unary_expression: "~" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 76
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 45

   71 unary_expression: "!" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 77
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 46

   81 primary_expression: "(" . expression ")"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    expression                 go to state 78
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 47

   23 initializer: "{" . initializer_list "}"
   24            | "{" . initializer_list "," "}"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 47

    initializer                go to state 80
    initializer_list           go to state 81
    assignment_expression      go to state 49
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 48

   18 init_declarator: declarator "=" initializer .

    $default  reduce using rule 18 (init_declarator)


State 49

   22 initializer: assignment_expression .

    $default  reduce using rule 22 (initializer)


State 50

  108 multiplicative_expression: unary_expression .

    $default  reduce using rule 108 (multiplicative_expression)


State 51

   64 assignment_expression: postfix_expression . "=" assignment_expression
   65 unary_expression: postfix_expression .
   73 postfix_expression: postfix_expression . "[" expression "]"

    "="  shift, and go to state 82
    "["  shift, and go to state 83

    $default  reduce using rule 65 (unary_expression)


State 52

   72 postfix_expression: primary_expression .
   74                   | primary_expression . "(" ")"
   75                   | primary_expression . "(" argument_list ")"

    "("  shift, and go to state 84

    $default  reduce using rule 72 (postfix_expression)


State 53

   63 assignment_expression: logical_or_expression .
   85 logical_or_expression: logical_or_expression . "||" logical_and_expression

    "||"  shift, and go to state 85

    $default  reduce using rule 63 (assignment_expression)


State 54

   84 logical_or_expression: logical_and_expression .
   87 logical_and_expression: logical_and_expression . "&&" bitwise_or_expression

    "&&"  shift, and go to state 86

    $default  reduce using rule 84 (logical_or_expression)


State 55

   86 logical_and_expression: bitwise_or_expression .
   89 bitwise_or_expression: bitwise_or_expression . "|" bitwise_xor_expression

    "|"  shift, and go to state 87

    $default  reduce using rule 86 (logical_and_expression)


State 56

   88 bitwise_or_expression: bitwise_xor_expression .
   91 bitwise_xor_expression: bitwise_xor_expression . "^" bitwise_and_expression

    "^"  shift, and go to state 88

    $default  reduce using rule 88 (bitwise_or_expression)


State 57

   90 bitwise_xor_expression: bitwise_and_expression .
   93 bitwise_and_expression: bitwise_and_expression . "&" equality_expression

    "&"  shift, and go to state 89

    $default  reduce using rule 90 (bitwise_xor_expression)


State 58

   92 bitwise_and_expression: equality_expression .
   95 equality_expression: equality_expression . "==" relational_expression
   96                    | equality_expression . "!=" relational_expression

    "=="  shift, and go to state 90
    "!="  shift, and go to state 91

    $default  reduce using rule 92 (bitwise_and_expression)


State 59

   94 equality_expression: relational_expression .
   98 relational_expression: relational_expression . "<" shift_expression
   99                      | relational_expression . ">" shift_expression
  100                      | relational_expression . "<=" shift_expression
  101                      | relational_expression . ">=" shift_expression

    "<"   shift, and go to state 92
    ">"   shift, and go to state 93
    "<="  shift, and go to state 94
    ">="  shift, and go to state 95

    $default  reduce using rule 94 (equality_expression)


State 60

   97 relational_expression: shift_expression .
  103 shift_expression: shift_expression . "<<" additive_expression
  104                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 96
    ">>"  shift, and go to state 97

    $default  reduce using rule 97 (relational_expression)


State 61

  102 shift_expression: additive_expression .
  106 additive_expression: additive_expression . "+" multiplicative_expression
  107                    | additive_expression . "-" multiplicative_expression

    "+"  shift, and go to state 98
    "-"  shift, and go to state 99

    $default  reduce using rule 102 (shift_expression)


State 62

  105 additive_expression: multiplicative_expression .
  109 multiplicative_expression: multiplicative_expression . "*" unary_expression
  110                          | multiplicative_expression . "/" unary_expression
  111                          | multiplicative_expression . "%" unary_expression

    "*"  shift, and go to state 100
    "/"  shift, and go to state 101
    "%"  shift, and go to state 102

    $default  reduce using rule 105 (additive_expression)


State 63

   20 declarator: declarator "[" array_length . "]"

    "]"  shift, and go to state 103


State 64

   34 compound_statement: "{" . "}"
   35                   | "{" . statement_list "}"
   36                   | "{" . declaration_list "}"
   37                   | "{" . declaration_list statement_list "}"

    "void"              shift, and go to state 1
    "i32"               shift, and go to state 2
    "f32"               shift, and go to state 3
    "string"            shift, and go to state 4
    "bool"              shift, and go to state 5
    "if"                shift, and go to state 104
    "for"               shift, and go to state 105
    "return"            shift, and go to state 106
    "break"             shift, and go to state 107
    "continue"          shift, and go to state 108
    "print"             shift, and go to state 109
    "scan"              shift, and go to state 110
    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 64
    "}"                 shift, and go to state 111
    ";"                 shift, and go to state 112

    declaration                go to state 113
    type_specifiers            go to state 114
    compound_statement         go to state 115
    statement_list             go to state 116
    declaration_list           go to state 117
    statement                  go to state 118
    expression_statement       go to state 119
    jump_statement             go to state 120
    selection_statement        go to state 121
    loop_statement             go to state 122
    io_statement               go to state 123
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 65

   29 function_definition: type_specifiers identifier "(" ")" compound_statement .

    $default  reduce using rule 29 (function_definition)


State 66

   20 declarator: declarator . "[" array_length "]"
   33 parameter_declarator: type_specifiers declarator .

    "["  shift, and go to state 26

    $default  reduce using rule 33 (parameter_declarator)


State 67

   28 parameter_type_list: parameter_type_list "," . type_specifiers

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5

    type_specifiers  go to state 125


State 68

    7 declaration: type_specifiers identifier "(" parameter_type_list ")" . ";"

    ";"  shift, and go to state 126


State 69

   32 parameter_declarator_list: parameter_declarator_list "," . parameter_declarator

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5

    type_specifiers       go to state 127
    parameter_declarator  go to state 128


State 70

   30 function_definition: type_specifiers identifier "(" parameter_declarator_list ")" . compound_statement

    "{"  shift, and go to state 64

    compound_statement  go to state 129


State 71

   68 unary_expression: "+" unary_expression .

    $default  reduce using rule 68 (unary_expression)


State 72

   65 unary_expression: postfix_expression .
   73 postfix_expression: postfix_expression . "[" expression "]"

    "["  shift, and go to state 83

    $default  reduce using rule 65 (unary_expression)


State 73

   69 unary_expression: "-" unary_expression .

    $default  reduce using rule 69 (unary_expression)


State 74

   66 unary_expression: "++" unary_expression .

    $default  reduce using rule 66 (unary_expression)


State 75

   67 unary_expression: "--" unary_expression .

    $default  reduce using rule 67 (unary_expression)


State 76

   70 unary_expression: "~" unary_expression .

    $default  reduce using rule 70 (unary_expression)


State 77

   71 unary_expression: "!" unary_expression .

    $default  reduce using rule 71 (unary_expression)


State 78

   62 expression: expression . "," assignment_expression
   81 primary_expression: "(" expression . ")"

    ","  shift, and go to state 130
    ")"  shift, and go to state 131


State 79

   61 expression: assignment_expression .

    $default  reduce using rule 61 (expression)


State 80

   25 initializer_list: initializer .

    $default  reduce using rule 25 (initializer_list)


State 81

   23 initializer: "{" initializer_list . "}"
   24            | "{" initializer_list . "," "}"
   26 initializer_list: initializer_list . "," initializer

    ","  shift, and go to state 132
    "}"  shift, and go to state 133


State 82

   64 assignment_expression: postfix_expression "=" . assignment_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    assignment_expression      go to state 134
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 83

   73 postfix_expression: postfix_expression "[" . expression "]"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    expression                 go to state 135
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 84

   74 postfix_expression: primary_expression "(" . ")"
   75                   | primary_expression "(" . argument_list ")"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    ")"                 shift, and go to state 136

    assignment_expression      go to state 137
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    argument_list              go to state 138
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 85

   85 logical_or_expression: logical_or_expression "||" . logical_and_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    logical_and_expression     go to state 139
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 86

   87 logical_and_expression: logical_and_expression "&&" . bitwise_or_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    bitwise_or_expression      go to state 140
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 87

   89 bitwise_or_expression: bitwise_or_expression "|" . bitwise_xor_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    bitwise_xor_expression     go to state 141
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 88

   91 bitwise_xor_expression: bitwise_xor_expression "^" . bitwise_and_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    bitwise_and_expression     go to state 142
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 89

   93 bitwise_and_expression: bitwise_and_expression "&" . equality_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    equality_expression        go to state 143
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 90

   95 equality_expression: equality_expression "==" . relational_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    relational_expression      go to state 144
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 91

   96 equality_expression: equality_expression "!=" . relational_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    relational_expression      go to state 145
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 92

   98 relational_expression: relational_expression "<" . shift_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    shift_expression           go to state 146
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 93

   99 relational_expression: relational_expression ">" . shift_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    shift_expression           go to state 147
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 94

  100 relational_expression: relational_expression "<=" . shift_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    shift_expression           go to state 148
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 95

  101 relational_expression: relational_expression ">=" . shift_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    shift_expression           go to state 149
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 96

  103 shift_expression: shift_expression "<<" . additive_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    additive_expression        go to state 150
    multiplicative_expression  go to state 62


State 97

  104 shift_expression: shift_expression ">>" . additive_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    additive_expression        go to state 151
    multiplicative_expression  go to state 62


State 98

  106 additive_expression: additive_expression "+" . multiplicative_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    multiplicative_expression  go to state 152


State 99

  107 additive_expression: additive_expression "-" . multiplicative_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression           go to state 50
    postfix_expression         go to state 72
    primary_expression         go to state 52
    multiplicative_expression  go to state 153


State 100

  109 multiplicative_expression: multiplicative_expression "*" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 154
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 101

  110 multiplicative_expression: multiplicative_expression "/" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 155
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 102

  111 multiplicative_expression: multiplicative_expression "%" . unary_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    unary_expression    go to state 156
    postfix_expression  go to state 72
    primary_expression  go to state 52


State 103

   20 declarator: declarator "[" array_length "]" .

    $default  reduce using rule 20 (declarator)


State 104

   54 selection_statement: "if" . "(" expression ")" compound_statement
   55                    | "if" . "(" expression ")" compound_statement "else" compound_statement
   56                    | "if" . "(" expression ")" compound_statement "else" selection_statement

    "("  shift, and go to state 157


State 105

   57 loop_statement: "for" . "(" expression_statement expression_statement ")" compound_statement
   58               | "for" . "(" expression_statement expression_statement expression ")" compound_statement

    "("  shift, and go to state 158


State 106

   52 jump_statement: "return" . ";"
   53               | "return" . expression ";"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    ";"                 shift, and go to state 159

    expression                 go to state 160
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 107

   51 jump_statement: "break" . ";"

    ";"  shift, and go to state 161


State 108

   50 jump_statement: "continue" . ";"

    ";"  shift, and go to state 162


State 109

   59 io_statement: "print" . "(" argument_list ")" ";"

    "("  shift, and go to state 163


State 110

   60 io_statement: "scan" . "(" argument_list ")" ";"

    "("  shift, and go to state 164


State 111

   34 compound_statement: "{" "}" .

    $default  reduce using rule 34 (compound_statement)


State 112

   48 expression_statement: ";" .

    $default  reduce using rule 48 (expression_statement)


State 113

   40 declaration_list: declaration .

    $default  reduce using rule 40 (declaration_list)


State 114

    6 declaration: type_specifiers . init_declarator_list ";"
    7            | type_specifiers . identifier "(" parameter_type_list ")" ";"
   14 type_specifiers: type_specifiers . "[" array_length "]"

    "Identifier"  shift, and go to state 14
    "["           shift, and go to state 15

    identifier            go to state 165
    init_declarator_list  go to state 17
    init_declarator       go to state 18
    declarator            go to state 19


State 115

   42 statement: compound_statement .

    $default  reduce using rule 42 (statement)


State 116

   35 compound_statement: "{" statement_list . "}"
   39 statement_list: statement_list . statement

    "if"                shift, and go to state 104
    "for"               shift, and go to state 105
    "return"            shift, and go to state 106
    "break"             shift, and go to state 107
    "continue"          shift, and go to state 108
    "print"             shift, and go to state 109
    "scan"              shift, and go to state 110
    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 64
    "}"                 shift, and go to state 166
    ";"                 shift, and go to state 112

    compound_statement         go to state 115
    statement                  go to state 167
    expression_statement       go to state 119
    jump_statement             go to state 120
    selection_statement        go to state 121
    loop_statement             go to state 122
    io_statement               go to state 123
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 117

   36 compound_statement: "{" declaration_list . "}"
   37                   | "{" declaration_list . statement_list "}"
   41 declaration_list: declaration_list . declaration

    "void"              shift, and go to state 1
    "i32"               shift, and go to state 2
    "f32"               shift, and go to state 3
    "string"            shift, and go to state 4
    "bool"              shift, and go to state 5
    "if"                shift, and go to state 104
    "for"               shift, and go to state 105
    "return"            shift, and go to state 106
    "break"             shift, and go to state 107
    "continue"          shift, and go to state 108
    "print"             shift, and go to state 109
    "scan"              shift, and go to state 110
    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 64
    "}"                 shift, and go to state 168
    ";"                 shift, and go to state 112

    declaration                go to state 169
    type_specifiers            go to state 114
    compound_statement         go to state 115
    statement_list             go to state 170
    statement                  go to state 118
    expression_statement       go to state 119
    jump_statement             go to state 120
    selection_statement        go to state 121
    loop_statement             go to state 122
    io_statement               go to state 123
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 118

   38 statement_list: statement .

    $default  reduce using rule 38 (statement_list)


State 119

   43 statement: expression_statement .

    $default  reduce using rule 43 (statement)


State 120

   44 statement: jump_statement .

    $default  reduce using rule 44 (statement)


State 121

   45 statement: selection_statement .

    $default  reduce using rule 45 (statement)


State 122

   46 statement: loop_statement .

    $default  reduce using rule 46 (statement)


State 123

   47 statement: io_statement .

    $default  reduce using rule 47 (statement)


State 124

   49 expression_statement: expression . ";"
   62 expression: expression . "," assignment_expression

    ","  shift, and go to state 130
    ";"  shift, and go to state 171


State 125

   14 type_specifiers: type_specifiers . "[" array_length "]"
   28 parameter_type_list: parameter_type_list "," type_specifiers .

    "["  shift, and go to state 15

    $default  reduce using rule 28 (parameter_type_list)


State 126

    7 declaration: type_specifiers identifier "(" parameter_type_list ")" ";" .

    $default  reduce using rule 7 (declaration)


State 127

   14 type_specifiers: type_specifiers . "[" array_length "]"
   33 parameter_declarator: type_specifiers . declarator

    "Identifier"  shift, and go to state 14
    "["           shift, and go to state 15

    identifier  go to state 33
    declarator  go to state 66


State 128

   32 parameter_declarator_list: parameter_declarator_list "," parameter_declarator .

    $default  reduce using rule 32 (parameter_declarator_list)


State 129

   30 function_definition: type_specifiers identifier "(" parameter_declarator_list ")" compound_statement .

    $default  reduce using rule 30 (function_definition)


State 130

   62 expression: expression "," . assignment_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    assignment_expression      go to state 172
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 131

   81 primary_expression: "(" expression ")" .

    $default  reduce using rule 81 (primary_expression)


State 132

   24 initializer: "{" initializer_list "," . "}"
   26 initializer_list: initializer_list "," . initializer

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 47
    "}"                 shift, and go to state 173

    initializer                go to state 174
    assignment_expression      go to state 49
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 133

   23 initializer: "{" initializer_list "}" .

    $default  reduce using rule 23 (initializer)


State 134

   64 assignment_expression: postfix_expression "=" assignment_expression .

    $default  reduce using rule 64 (assignment_expression)


State 135

   62 expression: expression . "," assignment_expression
   73 postfix_expression: postfix_expression "[" expression . "]"

    ","  shift, and go to state 130
    "]"  shift, and go to state 175


State 136

   74 postfix_expression: primary_expression "(" ")" .

    $default  reduce using rule 74 (postfix_expression)


State 137

   82 argument_list: assignment_expression .

    $default  reduce using rule 82 (argument_list)


State 138

   75 postfix_expression: primary_expression "(" argument_list . ")"
   83 argument_list: argument_list . "," assignment_expression

    ","  shift, and go to state 176
    ")"  shift, and go to state 177


State 139

   85 logical_or_expression: logical_or_expression "||" logical_and_expression .
   87 logical_and_expression: logical_and_expression . "&&" bitwise_or_expression

    "&&"  shift, and go to state 86

    $default  reduce using rule 85 (logical_or_expression)


State 140

   87 logical_and_expression: logical_and_expression "&&" bitwise_or_expression .
   89 bitwise_or_expression: bitwise_or_expression . "|" bitwise_xor_expression

    "|"  shift, and go to state 87

    $default  reduce using rule 87 (logical_and_expression)


State 141

   89 bitwise_or_expression: bitwise_or_expression "|" bitwise_xor_expression .
   91 bitwise_xor_expression: bitwise_xor_expression . "^" bitwise_and_expression

    "^"  shift, and go to state 88

    $default  reduce using rule 89 (bitwise_or_expression)


State 142

   91 bitwise_xor_expression: bitwise_xor_expression "^" bitwise_and_expression .
   93 bitwise_and_expression: bitwise_and_expression . "&" equality_expression

    "&"  shift, and go to state 89

    $default  reduce using rule 91 (bitwise_xor_expression)


State 143

   93 bitwise_and_expression: bitwise_and_expression "&" equality_expression .
   95 equality_expression: equality_expression . "==" relational_expression
   96                    | equality_expression . "!=" relational_expression

    "=="  shift, and go to state 90
    "!="  shift, and go to state 91

    $default  reduce using rule 93 (bitwise_and_expression)


State 144

   95 equality_expression: equality_expression "==" relational_expression .
   98 relational_expression: relational_expression . "<" shift_expression
   99                      | relational_expression . ">" shift_expression
  100                      | relational_expression . "<=" shift_expression
  101                      | relational_expression . ">=" shift_expression

    "<"   shift, and go to state 92
    ">"   shift, and go to state 93
    "<="  shift, and go to state 94
    ">="  shift, and go to state 95

    $default  reduce using rule 95 (equality_expression)


State 145

   96 equality_expression: equality_expression "!=" relational_expression .
   98 relational_expression: relational_expression . "<" shift_expression
   99                      | relational_expression . ">" shift_expression
  100                      | relational_expression . "<=" shift_expression
  101                      | relational_expression . ">=" shift_expression

    "<"   shift, and go to state 92
    ">"   shift, and go to state 93
    "<="  shift, and go to state 94
    ">="  shift, and go to state 95

    $default  reduce using rule 96 (equality_expression)


State 146

   98 relational_expression: relational_expression "<" shift_expression .
  103 shift_expression: shift_expression . "<<" additive_expression
  104                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 96
    ">>"  shift, and go to state 97

    $default  reduce using rule 98 (relational_expression)


State 147

   99 relational_expression: relational_expression ">" shift_expression .
  103 shift_expression: shift_expression . "<<" additive_expression
  104                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 96
    ">>"  shift, and go to state 97

    $default  reduce using rule 99 (relational_expression)


State 148

  100 relational_expression: relational_expression "<=" shift_expression .
  103 shift_expression: shift_expression . "<<" additive_expression
  104                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 96
    ">>"  shift, and go to state 97

    $default  reduce using rule 100 (relational_expression)


State 149

  101 relational_expression: relational_expression ">=" shift_expression .
  103 shift_expression: shift_expression . "<<" additive_expression
  104                 | shift_expression . ">>" additive_expression

    "<<"  shift, and go to state 96
    ">>"  shift, and go to state 97

    $default  reduce using rule 101 (relational_expression)


State 150

  103 shift_expression: shift_expression "<<" additive_expression .
  106 additive_expression: additive_expression . "+" multiplicative_expression
  107                    | additive_expression . "-" multiplicative_expression

    "+"  shift, and go to state 98
    "-"  shift, and go to state 99

    $default  reduce using rule 103 (shift_expression)


State 151

  104 shift_expression: shift_expression ">>" additive_expression .
  106 additive_expression: additive_expression . "+" multiplicative_expression
  107                    | additive_expression . "-" multiplicative_expression

    "+"  shift, and go to state 98
    "-"  shift, and go to state 99

    $default  reduce using rule 104 (shift_expression)


State 152

  106 additive_expression: additive_expression "+" multiplicative_expression .
  109 multiplicative_expression: multiplicative_expression . "*" unary_expression
  110                          | multiplicative_expression . "/" unary_expression
  111                          | multiplicative_expression . "%" unary_expression

    "*"  shift, and go to state 100
    "/"  shift, and go to state 101
    "%"  shift, and go to state 102

    $default  reduce using rule 106 (additive_expression)


State 153

  107 additive_expression: additive_expression "-" multiplicative_expression .
  109 multiplicative_expression: multiplicative_expression . "*" unary_expression
  110                          | multiplicative_expression . "/" unary_expression
  111                          | multiplicative_expression . "%" unary_expression

    "*"  shift, and go to state 100
    "/"  shift, and go to state 101
    "%"  shift, and go to state 102

    $default  reduce using rule 107 (additive_expression)


State 154

  109 multiplicative_expression: multiplicative_expression "*" unary_expression .

    $default  reduce using rule 109 (multiplicative_expression)


State 155

  110 multiplicative_expression: multiplicative_expression "/" unary_expression .

    $default  reduce using rule 110 (multiplicative_expression)


State 156

  111 multiplicative_expression: multiplicative_expression "%" unary_expression .

    $default  reduce using rule 111 (multiplicative_expression)


State 157

   54 selection_statement: "if" "(" . expression ")" compound_statement
   55                    | "if" "(" . expression ")" compound_statement "else" compound_statement
   56                    | "if" "(" . expression ")" compound_statement "else" selection_statement

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    expression                 go to state 178
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 158

   57 loop_statement: "for" "(" . expression_statement expression_statement ")" compound_statement
   58               | "for" "(" . expression_statement expression_statement expression ")" compound_statement

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    ";"                 shift, and go to state 112

    expression_statement       go to state 179
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 159

   52 jump_statement: "return" ";" .

    $default  reduce using rule 52 (jump_statement)


State 160

   53 jump_statement: "return" expression . ";"
   62 expression: expression . "," assignment_expression

    ","  shift, and go to state 130
    ";"  shift, and go to state 180


State 161

   51 jump_statement: "break" ";" .

    $default  reduce using rule 51 (jump_statement)


State 162

   50 jump_statement: "continue" ";" .

    $default  reduce using rule 50 (jump_statement)


State 163

   59 io_statement: "print" "(" . argument_list ")" ";"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    assignment_expression      go to state 137
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    argument_list              go to state 181
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 164

   60 io_statement: "scan" "(" . argument_list ")" ";"

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    assignment_expression      go to state 137
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    argument_list              go to state 182
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 165

    7 declaration: type_specifiers identifier . "(" parameter_type_list ")" ";"
   19 declarator: identifier .

    "("  shift, and go to state 183

    $default  reduce using rule 19 (declarator)


State 166

   35 compound_statement: "{" statement_list "}" .

    $default  reduce using rule 35 (compound_statement)


State 167

   39 statement_list: statement_list statement .

    $default  reduce using rule 39 (statement_list)


State 168

   36 compound_statement: "{" declaration_list "}" .

    $default  reduce using rule 36 (compound_statement)


State 169

   41 declaration_list: declaration_list declaration .

    $default  reduce using rule 41 (declaration_list)


State 170

   37 compound_statement: "{" declaration_list statement_list . "}"
   39 statement_list: statement_list . statement

    "if"                shift, and go to state 104
    "for"               shift, and go to state 105
    "return"            shift, and go to state 106
    "break"             shift, and go to state 107
    "continue"          shift, and go to state 108
    "print"             shift, and go to state 109
    "scan"              shift, and go to state 110
    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    "{"                 shift, and go to state 64
    "}"                 shift, and go to state 184
    ";"                 shift, and go to state 112

    compound_statement         go to state 115
    statement                  go to state 167
    expression_statement       go to state 119
    jump_statement             go to state 120
    selection_statement        go to state 121
    loop_statement             go to state 122
    io_statement               go to state 123
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 171

   49 expression_statement: expression ";" .

    $default  reduce using rule 49 (expression_statement)


State 172

   62 expression: expression "," assignment_expression .

    $default  reduce using rule 62 (expression)


State 173

   24 initializer: "{" initializer_list "," "}" .

    $default  reduce using rule 24 (initializer)


State 174

   26 initializer_list: initializer_list "," initializer .

    $default  reduce using rule 26 (initializer_list)


State 175

   73 postfix_expression: postfix_expression "[" expression "]" .

    $default  reduce using rule 73 (postfix_expression)


State 176

   83 argument_list: argument_list "," . assignment_expression

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46

    assignment_expression      go to state 185
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 177

   75 postfix_expression: primary_expression "(" argument_list ")" .

    $default  reduce using rule 75 (postfix_expression)


State 178

   54 selection_statement: "if" "(" expression . ")" compound_statement
   55                    | "if" "(" expression . ")" compound_statement "else" compound_statement
   56                    | "if" "(" expression . ")" compound_statement "else" selection_statement
   62 expression: expression . "," assignment_expression

    ","  shift, and go to state 130
    ")"  shift, and go to state 186


State 179

   57 loop_statement: "for" "(" expression_statement . expression_statement ")" compound_statement
   58               | "for" "(" expression_statement . expression_statement expression ")" compound_statement

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    ";"                 shift, and go to state 112

    expression_statement       go to state 187
    expression                 go to state 124
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 180

   53 jump_statement: "return" expression ";" .

    $default  reduce using rule 53 (jump_statement)


State 181

   59 io_statement: "print" "(" argument_list . ")" ";"
   83 argument_list: argument_list . "," assignment_expression

    ","  shift, and go to state 176
    ")"  shift, and go to state 188


State 182

   60 io_statement: "scan" "(" argument_list . ")" ";"
   83 argument_list: argument_list . "," assignment_expression

    ","  shift, and go to state 176
    ")"  shift, and go to state 189


State 183

    7 declaration: type_specifiers identifier "(" . parameter_type_list ")" ";"

    "void"    shift, and go to state 1
    "i32"     shift, and go to state 2
    "f32"     shift, and go to state 3
    "string"  shift, and go to state 4
    "bool"    shift, and go to state 5

    type_specifiers      go to state 190
    parameter_type_list  go to state 30


State 184

   37 compound_statement: "{" declaration_list statement_list "}" .

    $default  reduce using rule 37 (compound_statement)


State 185

   83 argument_list: argument_list "," assignment_expression .

    $default  reduce using rule 83 (argument_list)


State 186

   54 selection_statement: "if" "(" expression ")" . compound_statement
   55                    | "if" "(" expression ")" . compound_statement "else" compound_statement
   56                    | "if" "(" expression ")" . compound_statement "else" selection_statement

    "{"  shift, and go to state 64

    compound_statement  go to state 191


State 187

   57 loop_statement: "for" "(" expression_statement expression_statement . ")" compound_statement
   58               | "for" "(" expression_statement expression_statement . expression ")" compound_statement

    "Bool Constant"     shift, and go to state 35
    "Identifier"        shift, and go to state 36
    "Integer Constant"  shift, and go to state 37
    "Float Constant"    shift, and go to state 38
    "String Constant"   shift, and go to state 39
    "+"                 shift, and go to state 40
    "-"                 shift, and go to state 41
    "++"                shift, and go to state 42
    "--"                shift, and go to state 43
    "~"                 shift, and go to state 44
    "!"                 shift, and go to state 45
    "("                 shift, and go to state 46
    ")"                 shift, and go to state 192

    expression                 go to state 193
    assignment_expression      go to state 79
    unary_expression           go to state 50
    postfix_expression         go to state 51
    primary_expression         go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    bitwise_or_expression      go to state 55
    bitwise_xor_expression     go to state 56
    bitwise_and_expression     go to state 57
    equality_expression        go to state 58
    relational_expression      go to state 59
    shift_expression           go to state 60
    additive_expression        go to state 61
    multiplicative_expression  go to state 62


State 188

   59 io_statement: "print" "(" argument_list ")" . ";"

    ";"  shift, and go to state 194


State 189

   60 io_statement: "scan" "(" argument_list ")" . ";"

    ";"  shift, and go to state 195


State 190

   14 type_specifiers: type_specifiers . "[" array_length "]"
   27 parameter_type_list: type_specifiers .

    "["  shift, and go to state 15

    $default  reduce using rule 27 (parameter_type_list)


State 191

   54 selection_statement: "if" "(" expression ")" compound_statement .
   55                    | "if" "(" expression ")" compound_statement . "else" compound_statement
   56                    | "if" "(" expression ")" compound_statement . "else" selection_statement

    "else"  shift, and go to state 196

    $default  reduce using rule 54 (selection_statement)


State 192

   57 loop_statement: "for" "(" expression_statement expression_statement ")" . compound_statement

    "{"  shift, and go to state 64

    compound_statement  go to state 197


State 193

   58 loop_statement: "for" "(" expression_statement expression_statement expression . ")" compound_statement
   62 expression: expression . "," assignment_expression

    ","  shift, and go to state 130
    ")"  shift, and go to state 198


State 194

   59 io_statement: "print" "(" argument_list ")" ";" .

    $default  reduce using rule 59 (io_statement)


State 195

   60 io_statement: "scan" "(" argument_list ")" ";" .

    $default  reduce using rule 60 (io_statement)


State 196

   55 selection_statement: "if" "(" expression ")" compound_statement "else" . compound_statement
   56                    | "if" "(" expression ")" compound_statement "else" . selection_statement

    "if"  shift, and go to state 104
    "{"   shift, and go to state 64

    compound_statement   go to state 199
    selection_statement  go to state 200


State 197

   57 loop_statement: "for" "(" expression_statement expression_statement ")" compound_statement .

    $default  reduce using rule 57 (loop_statement)


State 198

   58 loop_statement: "for" "(" expression_statement expression_statement expression ")" . compound_statement

    "{"  shift, and go to state 64

    compound_statement  go to state 201


State 199

   55 selection_statement: "if" "(" expression ")" compound_statement "else" compound_statement .

    $default  reduce using rule 55 (selection_statement)


State 200

   56 selection_statement: "if" "(" expression ")" compound_statement "else" selection_statement .

    $default  reduce using rule 56 (selection_statement)


State 201

   58 loop_statement: "for" "(" expression_statement expression_statement expression ")" compound_statement .

    $default  reduce using rule 58 (loop_statement)
